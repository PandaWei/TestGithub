git init            : 初始化当前项目，生成隐藏文件夹.git
git add file        : 为当前项目做个快照，或称为index
git commit file     : 将快照永久写入仓库

git diff --cached   : 查看当前index与仓库之间代码的区别，一般在add之后使用
git diff            : 查看working tree与仓库之间代码的区别，一般在修改代码之后使用

git fetch origin master: 从远程获取最新版本到本地，不会自动merge
git pull origin master:  从远程获取最新版本到本地，自动merge
git push origin master:  将本地版本推向远程

git status          : 获取当前项目的整体改动
changed but not updated->已经修改，但未git add
changes to be committed->已经git add，但未git commit
untracked files->增加了新文件

git log             : 查看修改
git log -p          : 更多详细信息
git reflog          : 可以查看所有分支的所有记录

恢复在已丢失或删除的commit-id：
1) git reflog  查找丢失的commit-id
2）恢复操作：git cherry-pick commit-id 或 git reset --hard commit-id

恢复丢失的版本,出现*（no branch）时：
1）如果当前正工作在(no branch)上,则将(no branch)上的东西checkout到bak分支
# git checkout -b bak
2）如果不小心从（no branch）分支切换到其他分支了，git log无法查找到（no branch）上的信息：
# git reflog
# git checkout -b bak commit-id

git branch experimental : 创建experimental分支
git branch              : 查看分支
git branch -d experimental: 删除experimental分支

git checkout experimental: 切换到experimental分支
git checkout master     : 切换到master分支
git merge experimental  : 合并experimental分支到master分支

git reset --hard commit-id	:
git reset --hard	:将最近一次的提交回滚
git reset --hard HEAD~3	:将最近3次的提交回滚

git checkout <文件路径>  ： 撤销已修改的文件
git reset HEAD <文件路径> : 撤销已暂存的文件
